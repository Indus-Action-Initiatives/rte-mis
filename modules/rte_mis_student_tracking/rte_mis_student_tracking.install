<?php

/**
 * @file
 * Provide hook_install() / hook_uninstall() and hook_update_N() functions.
 */

use Drupal\rte_mis_core\Helper\ConfigManager;

/**
 * Implements hook_update_N().
 *
 * Updated the 'student performance' entity.
 */
function rte_mis_student_tracking_update_10001() {
  $manager = \Drupal::service('rte_mis_core.manager');
  $manager->updateConfigs(
    [
      'core.entity_form_display.mini_node.student_performance.default',
      'core.entity_form_display.mini_node.student_performance.student_tracking_modify',
      'core.entity_view_display.mini_node.student_performance.allocation_details',
      'core.entity_view_display.mini_node.student_performance.default',
      'core.entity_view_display.mini_node.student_performance.pdf',
      'field.field.mini_node.student_performance.field_student_application_number',
      'field.storage.mini_node.field_academic_session_tracking',
      'field.field.mini_node.student_performance.field_academic_session_tracking',
    ],
    'rte_mis_student_tracking',
    'install',
    ConfigManager::MODE_REPLACE,
  );

  $manager->deleteFields('mini_node', ['student_performance'], ['field_academic_session']);

  return t('Field field_academic_session has been renamed and updated to field_academic_session_tracking.');
}

/**
 * Implements hook_update_N().
 *
 * Add student tracking status field and workflow configs.
 */
function rte_mis_student_tracking_update_10002() {
  $manager = \Drupal::service('rte_mis_core.manager');
  $manager->updateConfigs(
    [
      'workflow.workflow.student_tracking_workflow',
      'workflow.state.student_tracking_workflow_creation',
      'workflow.state.student_tracking_workflow_studying',
      'workflow.state.student_tracking_workflow_dropout',
      'workflow.state.student_tracking_workflow_edu_completed',
      'workflow.transition.student_tracking_workflow_creation_dropout',
      'workflow.transition.student_tracking_workflow_creation_edu_completed',
      'workflow.transition.student_tracking_workflow_creation_studying',
      'workflow.transition.student_tracking_workflow_studying_dropout',
      'workflow.transition.student_tracking_workflow_studying_edu_completed',
      'workflow.transition.student_tracking_workflow_studying_studying',
      'workflow.transition.student_tracking_workflow_dropout_dropout',
      'workflow.transition.student_tracking_workflow_dropout_edu_completed',
      'workflow.transition.student_tracking_workflow_dropout_studying',
      'workflow.transition.student_tracking_workflow_edu_completed_dropout',
      'workflow.transition.student_tracking_workflow_edu_completed_edu_completed',
      'workflow.transition.student_tracking_workflow_edu_completed_studying',
      'field.storage.mini_node.field_student_tracking_status',
      'field.field.mini_node.student_performance.field_student_tracking_status',
      'core.entity_form_display.mini_node.student_performance.default',
      'core.entity_form_display.mini_node.student_performance.student_tracking_modify',
      'core.entity_view_display.mini_node.student_performance.allocation_details',
      'core.entity_view_display.mini_node.student_performance.default',
      'core.entity_view_display.mini_node.student_performance.pdf',
    ],
    'rte_mis_student_tracking',
    'install',
    ConfigManager::MODE_REPLACE,
  );
}

/**
 * Implements hook_update_N().
 *
 * Update student tracking workflow and view mode display configs.
 */
function rte_mis_student_tracking_update_10003() {
  $manager = \Drupal::service('rte_mis_core.manager');
  $manager->updateConfigs(
    [
      'workflow.workflow.student_tracking_workflow',
      'workflow.transition.student_tracking_workflow_dropout_studying',
      'core.entity_view_display.mini_node.student_performance.allocation_details',
    ],
    'rte_mis_student_tracking',
    'install',
    ConfigManager::MODE_REPLACE,
  );
}
