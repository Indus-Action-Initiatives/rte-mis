name: GrumPHP

on:
  pull_request:
    branches:
      - main
permissions:
  contents: read

jobs:
  run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['8.1']
        composer-deps: ['highest']
        composer-versions: ['composer:v2']
      fail-fast: false
    name: PHP ${{ matrix.php-versions }} @ ${{ matrix.operating-system }} with ${{ matrix.composer-versions }} ${{ matrix.composer-deps }}
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Install PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-versions }}
          tools: ${{ matrix.composer-versions }}
          extensions: xdebug, mbstring, posix

      - name: Check Versions
        run: |
          php -v
          php -m
          composer --version

      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies (highest)
        if: matrix.composer-deps == 'highest'
        run: composer update --prefer-dist --no-progress --no-suggest

      - name: Set git variables
        run: |
          git config --global user.email "no-action@example.com"
          git config --global user.name "No Action"
          git config --global protocol.file.allow always

      - name: Run the tests on unix
        if: runner.os != 'Windows'
        run: php vendor/bin/grumphp run --no-interaction

      - name: Run paratest outside of grumphp
        run: php ./vendor/bin/paratest --testsuite=E2E -f --verbose
