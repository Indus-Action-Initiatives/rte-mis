name: PHP CS
on:
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - main
jobs:
  phpcs:
    runs-on: ubuntu-latest
    name:  PHP ${{ matrix.php-versions }}
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: none
          tools: composer:v2, cs2pr


      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Drupal core dependencies
        run: |
          composer --no-interaction --no-progress --prefer-dist --optimize-autoloader install


      - name: Install PHP CodeSniffer
        run: |
          composer require --dev dealerdirect/phpcodesniffer-composer-installer
          composer require --dev drupal/coder

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v19
        with:
          fetch-depth: 0
          files: |
            *.php
            *.module
            *.theme
            *.profile
            *.install
            *.inc

      - name: check standards
        run: |
          ab=0
          vendor/bin/phpcs --standard=Drupal,DrupalPractice --config-set ignore_warnings_on_exit 1
          vendor/bin/phpcs --standard=Drupal,DrupalPractice --config-set ignore_errors_on_exit 1
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              output=$(vendor/bin/phpcs  $file) && echo "$output"
              if [[ $output == *"ERROR"* ]]; then
                ab=1
              fi
          done
          echo $ab
          exit $ab
